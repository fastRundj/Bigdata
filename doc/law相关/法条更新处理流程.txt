法条清洗及更新处理流程：

一审、二审分开处理：

一审：
1、spark读取judgment_etl_lawlist，字段有uuid,lawlist，按lawlist展开分组。
key为：法条，value为uuids。

（spark写入mysql之前，手动创建lawlist_uuids_1shen_all表，不含id字段，uuids为longtext类型）
分组结果spark写入lawlist_uuids_1shen_all，字段有title_short,art_num,uuids,uuids_len。

写入mysql后，需手动增加id字段，自动递增。（因为以下统计时用到了id字段）

统计不合格的title_short,art_num：
create table lawlist_uuids_1shen_error as  SELECT title_short,art_num,uuids,uuids_len from lawlist_uuids_1shen_all where id not in (
SELECT a.id from lawlist_uuids_1shen_all a ,law_rule_result2 b where a.title_short = b.title_short and a.art_num = b.art_num ) 
order by uuids_len desc

结果存入lawlist_uuids_1shen_error表。

将lawlist_uuids_1shen_error表手动增加id字段，自动递增，然后导出lawlist_uuids_1shen_error.xlsx,导出字段id,title_short,art_num,uuids_len，
再在lawlist_uuids_1shen_error.xlsx中添加flag字段，人工检测title_short,art_num，ok的话，flag标注为1，否则不动。

1）关联law_rule_result2表，验证flag标注为1的数据中修改后的title_short,art_num，哪些是OK的？不要全合并过去，
并将这些OK的数据union到lawlist_uuids_1shen_all表。（要用union,这些新合并的title_short,art_num，all表可能已有，可能未有）

并将这些OK的数据，基于uuids，也需要replace到judgment_etl表的lawlist中，直接用replace替换旧的lawlist中旧
字符串title_short|art_num为新的。以便后面使用spark再去处理


2）将lawlist_uuids_1shen_error.xlsx中，flag标注为1的数据，且验证OK的数据，union到lawlist_uuids_1shen_all表后，

分组：分组后去掉uuids中重复的uuid。（重复的uuid，会导致同一个lawlist_id会插入一个uuid中多次，没必要，检索是只要匹配到即可）

1、可以再统计不合格的title_short,art_num到表lawlist_uuids_1shen_error2，如有必要再进行二次手工处理。

2、再关联law_rule_result2表统计合格的title_short,art_num,uuids,lawlist_id,写入lawlist_uuids_1shen_success表，
然后遍历该表的每一行：
将该行lawlist_id插入到judgment_etl表对应的uuids中。

或者替换掉judgment_etl中的lawlist后，再重新执行下spark的程序，导出lawlist_uuids_1shen_all表，再统计合格的数据，进行遍历，
将lawlist_id插入到judgment_etl表对应的uuids中。


使用spark处理，基于uuids展开分组，key为uuid,value为lawlist_id，然后基于uuid字段更新lawlist_ids到judgment_etl表。
而非使用单纯的嵌套遍历去处理！
=================================================================
更新：

1、新增文书，更新其lawlist_id字段：

批量处理:读取id>新增开始id,然后使用spark程序处理，导出lawlist_uuids_1shen_all_add表，导出不合格的title_short、
art_num等到lawlist_uuids_1shen_error_add,进行人工标注得lawlist_uuids_1shen_error_add.xlsx，之后再更新到judgment_etl>新增开始id中去。

合并lawlist_uuids_1shen_error_add.xlsx到all_add表，再进行过滤出合格的法条到success_add表，进而遍历
将lawlist_id插入到judgment_etl表id>新增开始id对应的uuids中。


2、新增法条，更新文书的lawlist_id字段：（lawlist_id默认为NULL，是手动使用id更新的，可由lawlist_id判断哪些是新增的法条）

由于已有最后整理的不合格的法条，包括title_short，art_num，uuids等。因此只需将不合格的法条拿来与新增的法条进行验证即可，
若之前不合格的法条能匹配上新增的法条，则就列为合格，同时需要将该法条从lawlist_uuids_1shen_error中删除，并将该法条的lawlist_id,追加到judgment_etl其对应的uuids中。















